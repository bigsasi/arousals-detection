% HOW-TO EXAMPLE SCRIPT ON THE USE OF THE EEG AROUSALS DETECTION CODE
%
% INPUT: AN EDF(+) FILE CONTAINING ONE EEG, ONE EMG (chin) AND (OPTIONALLY) ONE ECG DERIVATIONS
%
% OUTPUT: AN EDF+ FILE CONTAINING ANNOTATIONS OF THE DETECTED EEG AROUSAL EVENTS
%
%% The code below is based on the methods described in the following reference(s):
% 
% [1] - I. Fern치ndez-Varela, D. Alvarez-Estevez, E. Hern치ndez-Pereira, V. Moret-Bonillo, 
% "A simple and robust method for the automatic scoring of EEG arousals in
% polysomnographic recordings", Computers in Biology and Medicine, vol. 87, pp. 77-86, 2017
%
% [2] - D. Alvarez-Estevez, I. Fern치ndez-Varela, "Large-scale validation of an automatic EEG arousal detection
% algorithm using different heterogeneous databases", Sleep Medicine, vol. 57, pp. 6-14, 2019 
%
% Copyright (C) 2017-2019 Isaac Fern치ndez-Varela
% Copyright (C) 2017-2019 Diego Alvarez-Estevez

%% This program is free software: you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation, either version 3 of the License, or
%% (at your option) any later version.

%% This program is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%% GNU General Public License for more details.

%% You should have received a copy of the GNU General Public License
%% along with this program.  If not, see <http://www.gnu.org/licenses/>.

provideHypnogram = 1;

fileName = 'Male04yrs 04-AUG-2016 20h04m00s PSG.EDF';
hypnogramFileName = [fileName(1:end-4) '_hypnogram.edf'];

pathToFile = which(fileName);

configurationMontage = xml_parseany('conf.xml');
configurationFilters = xml_parseany('conf_filters.xml');

edfFile = loadFile(pathToFile, configurationMontage, configurationFilters);

eeg = edfFile.signal{edfFile.eeg};
emg = edfFile.signal{edfFile.emg};

% (Optional) Hypnogram information can be provided to the algorithm
%            This information can be generated by external methods (e.g.
%            automatic hypnogram detector) or can be contained on an
%            external EDF+ file
if provideHypnogram
    % Here we assume the hypnogram is provided using an external EDF+ file
    fileHypnogram = which(hypnogramFileName);
    hypnoAnnotations = loadEdfAnnotations(pathToFile, fileHypnogram);
    duration = edfFile.header.num_data_records * edfFile.header.duration_data_record;
    
    hypnogram = buildHypnogram(hypnoAnnotations, duration);
    
    [arousals, ~, ~, ~] = arousalDetection(eeg, emg, hypnogram);
else
    [arousals, ~, ~, ~] = arousalDetection(eeg, emg);
end

% Save outpuut to an EDF+ file
annotations.offset = [];
annotations.duration = [];
annotations.label = [];
for k = 1:length(arousals)
    annotations.offset = [annotations.offset, arousals(k).start];
    annotations.duration = [annotations.duration, arousals(k).duration];
    annotations.label = [annotations.label, {'EEG arousal'}];
end

statusOK = annotations2EDFplus(annotations, edfFile.header.local_patient_identification, edfFile.header.local_recording_identification, ...
    edfFile.header.startdate_recording, edfFile.header.starttime_recording, [pathToFile(1:end-4), '_EEGArousals.edf']);

if not(statusOK)
    error('Problem exporting EEG arousal debug annotations');
end


